name: Release Test

on:
  workflow_dispatch:
  push:
  # push:
  #   tags:
  #     - "v*"

jobs:
  release:
    name: Release
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CHANGELOG_PUSH_TOKEN }}

      - name: 🗝️ Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          # passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup node
        uses: actions/setup-node@v6

      - name: Bump version
        id: bump
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --bumped-version

      - name: Create Release Branch
        run: |
          BRANCH="release/${{ steps.bump.outputs.content }}"
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"
          git checkout -b "$BRANCH"

      - name: Generate Unreleased Changelog
        id: unreleased
        uses: orhun/git-cliff-action@v4
        with:
          args: --bump --unreleased --strip header

      - name: Update Changelog
        id: full
        uses: orhun/git-cliff-action@v4
        with:
          args: --bump
        env:
          OUTPUT: CHANGELOG.md

      - name: Bump Dashboard
        run: |
          VERSION="${{ steps.bump.outputs.content }}"
          VERSION="${VERSION#v}"
          npm --prefix frontend/dashboard version "$VERSION" --no-git-tag-version

      - name: Commit Changes
        run: |
          set +e
          git add CHANGELOG.md
          git add frontend/dashboard/package*.json
          git commit \
            -S \
            -m "chore: release ${{ steps.bump.outputs.content }}" \
            -m "- update changelog" \
            -m "- update dashboard version"
          git push origin "$BRANCH"

      - name: Create Release PR
        env:
          GH_TOKEN: ${{ secrets.CHANGELOG_PUSH_TOKEN }}
        run: |
          cat > pr-body.md << EOF
          ## Release ${{ steps.bump.outputs.content }}

          This PR contains a release notes preview for ${{ steps.bump.outputs.content }} & version bumps.

          <details><summary>Preview Release Notes</summary>
          <p>

          ${{ steps.unreleased.outputs.content }}
          </p>
          </details>

          ## Next Steps ➡️

          - 🔍 **Review all the changes**
          - 🚢 **Merge to Ship!**
          EOF
          gh pr create \
          --title "chore: release ${{ steps.bump.outputs.content }}" \
          --body-file pr-body.md \
          --head "${{ env.BRANCH }}" \
          --label "chore,docs,frontend,backend"
          --assignee detj

      # - name: Save bumped version
      #   run: |
      #     echo "Bumped version: $(cat next-version.txt)"
      #     echo "bumped_version=$(cat next-version.txt)" >> "$GITHUB_OUTPUT"

      # - name: Print bumped version
      #   run: |
      #     echo "Bumped version (content): ${{ steps.bumped-version.outputs.content }}"
      #     echo "Bumped version (version): ${{ steps.bumped-version.outputs.version }}"

      # - name: Generate changelog
      #   uses: orhun/git-cliff-action@v4
      #   id: generate-changelog
      #   with:
      #     config: cliff.toml
      #     args: --bump
      #   env:
      #     OUTPUT: CHANGELOG.md

      # - name: Print changelog
      #   run: |
      #     # echo "Changelog:"
      #     # echo ${{ steps.generate-changelog.outputs.changelog }}

      # - name: Generate release notes
      #   uses: orhun/git-cliff-action@v4
      #   id: release-notes
      #   with:
      #     args: --latest --strip header footer
      #   env:
      #     OUTPUT: CHANGES.md
      #     GITHUB_REPO: ${{ github.repository }}

      # - name: Print release notes
      #   run: |
      #     echo "Release notes:"
      #     cat CHANGES.md
